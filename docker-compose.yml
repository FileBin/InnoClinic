version: '3.8'
services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: innoclinic-nginx
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - '/var/run/docker.sock:/tmp/docker.sock:ro'
      - './shared/nginx/vhost.d:/etc/nginx/vhost.d'
      - './shared/nginx/certs:/etc/nginx/certs:ro'
    networks:
      innoclinic_proxy: null
      innoclinic_net:
        aliases:
          - sts.innoclinic.local
          - admin.innoclinic.local
          - admin-api.innoclinic.local
          - offices-api.innoclinic.local
          - services-api.innoclinic.local
          - appointments-api.innoclinic.local
          - seq.innoclinic.local
          - rabbitmq.innoclinic.local
          - pgadmin.innoclinic.local

    restart: always

  authorizationapi.admin:
    image: '${DOCKER_REGISTRY-}innoclinic-duende-identityserver-admin'
    build:
      context: Backend/AuthorizationAPI
      dockerfile: src/AuthorizationAPI.Admin/Dockerfile
    container_name: innoclinic-duende-identityserver-admin
    environment:
      - VIRTUAL_HOST=admin.innoclinic.local
      - 'ConnectionStrings__ConfigurationDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;Trust Server Certificate=True;'
      - 'ConnectionStrings__PersistedGrantDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;Trust Server Certificate=True;'
      - 'ConnectionStrings__IdentityDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;Trust Server Certificate=True;'
      - 'ConnectionStrings__AdminLogDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;Trust Server Certificate=True;'
      - 'ConnectionStrings__AdminAuditLogDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;Trust Server Certificate=True;'
      - 'ConnectionStrings__DataProtectionDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;Trust Server Certificate=True;'
      - 'AdminConfiguration__IdentityAdminBaseUrl=https://admin.innoclinic.local'
      - 'AdminConfiguration__IdentityAdminRedirectUri=https://admin.innoclinic.local/signin-oidc'
      - 'AdminConfiguration__IdentityServerBaseUrl=https://sts.innoclinic.local'
      - 'AdminConfiguration__RequireHttpsMetadata=false'
      - 'Serilog__WriteTo__1__Args__connectionString=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;Trust Server Certificate=True;'
      - 'AdminConfiguration__Theme=sketchy'
      - 'IdentityServerData__Clients__0__ClientSecrets__0__Value=${IDENTITY_ADMIN_CLIENT_SECRET}'
      - 'IdentityServerData__Clients__2__ClientSecrets__0__Value=${OFFICES_API_CLIENT_SECRET}'
      - 'IdentityServerData__Clients__3__ClientSecrets__0__Value=${SERVICES_API_CLIENT_SECRET}'
      - 'AdminConfiguration__ClientSecret=${IDENTITY_ADMIN_CLIENT_SECRET}'
      - DockerConfiguration__UpdateCaCertificate=true
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
    command: dotnet AuthorizationAPI.Admin.dll /seed
    depends_on:
      - db
      - authorizationapi.sts.identity
    volumes:
      - './shared/serilog.json:/app/serilog.json'
      - './shared/identityserverdata.json:/app/identityserverdata.json'
      - './shared/nginx/certs/cacerts.crt:/usr/local/share/ca-certificates/cacerts.crt'
    networks:
      innoclinic_net:
        aliases:
          - admin.innoclinic.local
    restart: on-failure:5
  
  authorizationapi.admin.api:
    image: '${DOCKER_REGISTRY-}innoclinic-duende-identityserver-admin-api'
    build:
      context: Backend/AuthorizationAPI
      dockerfile: src/AuthorizationAPI.Admin.Api/Dockerfile
    container_name: innoclinic-duende-identityserver-admin-api
    environment:
      - VIRTUAL_HOST=admin-api.innoclinic.local
      - AdminApiConfiguration__RequireHttpsMetadata=false
      - 'AdminApiConfiguration__ApiBaseUrl=https://admin-api.innoclinic.local'
      - 'AdminApiConfiguration__IdentityServerBaseUrl=https://sts.innoclinic.local'
      - 'ConnectionStrings__ConfigurationDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;Trust Server Certificate=True;'
      - 'ConnectionStrings__PersistedGrantDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;Trust Server Certificate=True;'
      - 'ConnectionStrings__IdentityDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;Trust Server Certificate=True;'
      - 'ConnectionStrings__AdminLogDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;Trust Server Certificate=True;'
      - 'ConnectionStrings__AdminAuditLogDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;Trust Server Certificate=True;'
      - 'ConnectionStrings__DataProtectionDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;Trust Server Certificate=True;'
      - 'AdminConfiguration__Theme=sketchy'
      - DockerConfiguration__UpdateCaCertificate=true
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
    volumes:
      - './shared/serilog.json:/app/serilog.json'
      - './shared/nginx/certs/cacerts.crt:/usr/local/share/ca-certificates/cacerts.crt'
    networks:
      innoclinic_net:
        aliases:
          - admin-api.innoclinic.local
    restart: on-failure:5
  
  authorizationapi.sts.identity:
    image: '${DOCKER_REGISTRY-}innoclinic-duende-identityserver-sts-identity'
    build:
      context: Backend/AuthorizationAPI
      dockerfile: src/AuthorizationAPI.STS.Identity/Dockerfile
    container_name: innoclinic-duende-identityserver-sts-identity
    environment:
      - VIRTUAL_HOST=sts.innoclinic.local
      - 'ConnectionStrings__ConfigurationDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;Trust Server Certificate=True;'
      - 'ConnectionStrings__PersistedGrantDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;Trust Server Certificate=True;'
      - 'ConnectionStrings__IdentityDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;Trust Server Certificate=True;'
      - 'ConnectionStrings__DataProtectionDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;Trust Server Certificate=True;'
      - 'AdminConfiguration__IdentityAdminBaseUrl=https://admin.innoclinic.local'
      - 'AdvancedConfiguration__IssuerUri=https://sts.innoclinic.local'
      - 'AdminConfiguration__Theme=sketchy'
      - DockerConfiguration__UpdateCaCertificate=true
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
    depends_on:
      - db
    volumes:
      - './shared/serilog.json:/app/serilog.json'
      - './shared/nginx/certs/cacerts.crt:/usr/local/share/ca-certificates/cacerts.crt'
    networks:
      innoclinic_net:
        aliases:
          - sts.innoclinic.local
    restart: on-failure:5

  officesAPI:
    image: '${DOCKER_REGISTRY-}innoclinic-offices-api'
    build:
      context: Backend/OfficesAPI
    container_name: innoclinic-offices-api
    environment:
      - VIRTUAL_HOST=offices-api.innoclinic.local
      - OfficesDb__Password=${OFFICES_DB_PASSWORD}
      - OfficesDb__Host=mongodb
      - IdentityServer__OAuth__ClientSecret=${OFFICES_API_CLIENT_SECRET}
      - Serilog__WriteTo__0__Args__serverUrl=http://seq:5341
      - Serilog__WriteTo__0__Args__apiKey=${OFFICES_API_LOG_APIKEY}
      - Seq__ServerUrl=http://seq:5341
      - Seq__ApiKey=${OFFICES_API_LOG_APIKEY}
      - ASPNETCORE_ENVIRONMENT=Staging
    depends_on:
      - mongodb
      - seq
    volumes:
      - './shared/nginx/certs/cacerts.crt:/usr/local/share/ca-certificates/cacerts.crt'
    networks:
      innoclinic_net:
        aliases:
          - offices-api.innoclinic.local

  servicesAPI:
    image: '${DOCKER_REGISTRY-}innoclinic-services-api'
    build:
      context: Backend/ServicesAPI
    container_name: innoclinic-services-api
    environment:
      - 'ConnectionStrings__DefaultConnection=Server=db;Database=ServicesAPI;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;Trust Server Certificate=True;'
      - VIRTUAL_HOST=services-api.innoclinic.local
      - IdentityServer__OAuth__ClientSecret=${SERVICES_API_CLIENT_SECRET}
      - Serilog__WriteTo__0__Args__serverUrl=http://seq:5341
      - Serilog__WriteTo__0__Args__apiKey=${SERVICES_API_LOG_APIKEY}
      - ASPNETCORE_ENVIRONMENT=Staging
      - RabbitMq__Host=rabbitmq
      - RabbitMq__Username=${RABBITMQ_USER}
      - RabbitMq__Password=${RABBITMQ_PASSWORD}
    depends_on:
      - db
      - seq
    volumes:
      - './shared/nginx/certs/cacerts.crt:/usr/local/share/ca-certificates/cacerts.crt'
    networks:
      innoclinic_net:
        aliases:
          - services-api.innoclinic.local

  appointmentsAPI:
    image: '${DOCKER_REGISTRY-}innoclinic-appointments-api'
    build:
      context: Backend/AppointmentsAPI
    container_name: innoclinic-appointments-api
    environment:
      - VIRTUAL_HOST=appointments-api.innoclinic.local
      - ASPNETCORE_ENVIRONMENT=Staging
      - 'AppointmentsDb__Host=postgres'
      - 'AppointmentsDb__Port=5432'
      - 'AppointmentsDb__User=appointments_api'
      - 'AppointmentsDb__Password=${APPOINTMENTS_DB_PASSWORD}'
      - 'AppointmentsDb__Database=appointments'
      - IdentityServer__OAuth__ClientSecret=${SERVICES_API_CLIENT_SECRET}
      - Serilog__WriteTo__0__Args__serverUrl=http://seq:5341
      - Serilog__WriteTo__0__Args__apiKey=${SERVICES_API_LOG_APIKEY}
      - RabbitMq__Host=rabbitmq
      - RabbitMq__Username=${RABBITMQ_USER}
      - RabbitMq__Password=${RABBITMQ_PASSWORD}
    depends_on:
      - db
      - seq
    volumes:
      - './shared/nginx/certs/cacerts.crt:/usr/local/share/ca-certificates/cacerts.crt'
    networks:
      innoclinic_net:
        aliases:
          - appointments-api.innoclinic.local

  db:
    image: 'mcr.microsoft.com/mssql/server:2022-CU12-ubuntu-22.04'
    ports:
      - '1433:1433'
    container_name: innoclinic-duende-identityserver-db
    environment:
      MSSQL_SA_PASSWORD: '${DB_PASSWORD:-Password_123}'
      ACCEPT_EULA: 'Y'
    volumes:
      - 'dbdata_test:/var/opt/mssql'
    networks:
      innoclinic_net: null
    restart: 
      on-failure:5

  mongodb:
    image: mongo:4.2.3-bionic
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_DATABASE=offices
      - MONGO_INITDB_ROOT_USERNAME=officesAPI
      - MONGO_INITDB_ROOT_PASSWORD=${OFFICES_DB_PASSWORD}
    volumes:
      - ./mongo-entrypoint:/docker-entrypoint-initdb.d
      - mongodb:/data/db
      - mongoconfig:/data/configdb
    networks:
      - innoclinic_net

  postgres:
    image: postgres:16
    ports:
      - '5432:5432'
    volumes:
      - postgresdata:/var/lib/postgresql/data
      - ./shared/postgres/init.d:/docker-entrypoint-initdb.d
    environment:
      - VIRTUAL_HOST=appointments-api.innoclinic.local
      - POSTGRES_PASSWORD=${APPOINTMENTS_DB_PASSWORD}
      - DB_USER=appointments_api
      - DB_USER_PASSWORD=${APPOINTMENTS_DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - innoclinic_net

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      - VIRTUAL_HOST=pgadmin.innoclinic.local
      - PGADMIN_DEFAULT_EMAIL=user@example.com
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    volumes:
      - pgadmindata:/var/lib/pgadmin
    networks:
      innoclinic_net:
        aliases:
          - pgadmin.innoclinic.local

  seq:
    image: datalust/seq
    restart: unless-stopped
    environment:
      - VIRTUAL_HOST=seq.innoclinic.local
      - ACCEPT_EULA=Y
      - SEQ_FIRSTRUN_ADMINPASSWORDHASH=${SEQ_PASSWORDHASH}
    volumes:
      - seq_data:/data
      - './shared/nginx/certs/cacerts.crt:/usr/local/share/ca-certificates/cacerts.crt'
    ports:
      - 5341:5341
    networks:
      innoclinic_net:
        aliases:
          - seq.innoclinic.local

  rabbitmq:
    image: rabbitmq:3.13.3-management-alpine
    hostname: rabbitmq
    restart: always
    volumes:
      - ./shared/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      - VIRTUAL_HOST=rabbitmq.innoclinic.local
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      innoclinic_net:
        aliases:
          - rabbitmq.innoclinic.local

volumes:
  dbdata_test:
    driver: local
  postgresdata:
    driver: local
  pgadmindata:
  mongodb:
  mongoconfig:
  seq_data:
  rabbitmq_data:

networks:
  innoclinic_proxy:
    driver: bridge
  innoclinic_net:
    driver: bridge
